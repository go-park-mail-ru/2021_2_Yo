version: "3.6"
services:
  bmstusa-app:
    build: "./"
    command: ./backend
    volumes:
      - images-storage:/app/static/images
    ports:
      - "8080:8080"
    depends_on:
      - auth
      - event
      - user

  auth:
    build:
      context: ./ 
      dockerfile: ./microservice/auth/Dockerfile
    command: "./auth"
    ports:
      - "8081:8081"
    depends_on:
      - redis-db

  event:
    build:
      context: ./ 
      dockerfile: ./microservice/event/Dockerfile
    command: "./event"
    ports:
      - "8083:8083"

  user:
    build:
      context: ./ 
      dockerfile: ./microservice/user/Dockerfile
    command: "./user"
    ports:
      - "8084:8084"
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus:/etc/prometheus"
    depends_on:
      - bmstusa-app

# for remote
#  postgres-db:
#    restart: always
#   image: postgres:latest
#   environment:
#     - POSTGRES_PASSWORD=password
#  ports:
#    - "5432:5432"
  
  redis-db:
    restart: always
    image: redis:latest
    ports:
      - "6380:6379"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
    #  - "./grafana.ini:/etc/grafana/grafana.ini"
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      
# Explicitly define the persistent volume for your data storage
volumes:
  grafana-data:
    external: true
  images-storage:
    external: true
    