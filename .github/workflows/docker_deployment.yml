name: Build/Push/Deploy

env:
  SERVER_TAG: latest
  AUTH_TAG: latest
  EVENT_TAG: latest
  USER_TAG: latest

on:
  push:
    branches: [After_RK4]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: DockerHub Authorization
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER}} --password-stdin
      - name: Build Docker Server
        run: docker build -t ${{ secrets.DOCKER_USER}}/server:${{ env.SERVER_TAG }} --target server-build .
      - name: Build Docker Auth-Service
        run: docker build -t ${{ secrets.DOCKER_USER}}/auth:${{ env.AUTH_TAG }} --target auth-build .
      - name: Build Docker Event-Service
        run: docker build -t ${{ secrets.DOCKER_USER}}/event:${{ env.EVENT_TAG }} --target event-build .
      - name: Build Docker User-Service
        run: docker build -t ${{ secrets.DOCKER_USER}}/user:${{ env.USER_TAG }} --target user-build .
      - name: Push Docker Server
        run: docker push  ${{ secrets.DOCKER_USER}}/server:${{ env.SERVER_TAG }} 
      - name: Push Docker Auth-Service
        run: docker push  ${{ secrets.DOCKER_USER}}/auth:${{ env.AUTH_TAG }} 
      - name: Push Docker Event-Service
        run: docker push  ${{ secrets.DOCKER_USER}}/event:${{ env.EVENT_TAG }} 
      - name: Push Docker User-Service
        run: docker push  ${{ secrets.DOCKER_USER}}/user:${{ env.USER_TAG }} 

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Server Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull ${{ secrets.DOCKER_USER }}/server:${{ env.SERVER_TAG }}
      - name: Pull Auth Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull ${{ secrets.DOCKER_USER }}/auth:${{ env.SERVER_TAG }}
      - name: Pull Event Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull ${{ secrets.DOCKER_USER }}/event:${{ env.SERVER_TAG }}
      - name: Pull User Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull ${{ secrets.DOCKER_USER }}/user:${{ env.SERVER_TAG }}

  start:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Start App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/bmstusa/backend
            sudo docker volume create --name=grafana-storage
            git pull
            sudo docker-compose down
            sudo docker rmi $(docker images -q)
            sudo docker-compose up -d